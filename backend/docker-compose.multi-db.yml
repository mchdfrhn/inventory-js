version: '3.8'

services:
  # PostgreSQL Database
  postgres-db:
    image: postgres:15-alpine
    container_name: inventory-postgres
    environment:
      POSTGRES_DB: inventaris
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - inventory-network
    profiles:
      - postgres

  # MySQL Database
  mysql-db:
    image: mysql:8.0
    container_name: inventory-mysql
    environment:
      MYSQL_DATABASE: inventaris
      MYSQL_ROOT_PASSWORD: mysql123
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - inventory-network
    profiles:
      - mysql

  # Backend API (PostgreSQL version)
  backend-postgres:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-backend-postgres
    environment:
      DB_DRIVER: postgres
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres123
      DB_NAME: inventaris
      DB_SSLMODE: disable
      GIN_MODE: release
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    networks:
      - inventory-network
    profiles:
      - postgres

  # Backend API (MySQL version)
  backend-mysql:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-backend-mysql
    environment:
      DB_DRIVER: mysql
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: mysql123
      DB_NAME: inventaris
      DB_CHARSET: utf8mb4
      DB_PARSETIME: true
      DB_LOC: Local
      GIN_MODE: release
    ports:
      - "8081:8080"
    depends_on:
      - mysql-db
    networks:
      - inventory-network
    profiles:
      - mysql

  # Backend API (SQLite version - for development)
  backend-sqlite:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: inventory-backend-sqlite
    environment:
      DB_DRIVER: sqlite
      DB_NAME: inventaris
      GIN_MODE: release
    ports:
      - "8082:8080"
    volumes:
      - sqlite_data:/app/data
    networks:
      - inventory-network
    profiles:
      - sqlite

volumes:
  postgres_data:
  mysql_data:
  sqlite_data:

networks:
  inventory-network:
    driver: bridge
